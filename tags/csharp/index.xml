<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>CSharp on Mars's Blog</title><link>https://mars23003.github.io/blog/tags/csharp/</link><description>Recent content in CSharp on Mars's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><atom:link href="https://mars23003.github.io/blog/tags/csharp/index.xml" rel="self" type="application/rss+xml"/><item><title>[C#] 三分鐘了解如何利用 NUnit 進行單元測試</title><link>https://mars23003.github.io/blog/posts/csharp/nunit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mars23003.github.io/blog/posts/csharp/nunit/</guid><description>如何利用 NUnit 進行單元測試</description></item><item><title>[C#] 方法參數in、ref、out、params看這篇就夠了</title><link>https://mars23003.github.io/blog/posts/csharp/methodparameters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mars23003.github.io/blog/posts/csharp/methodparameters/</guid><description>當一個方法不包含in、ref或out時， 其參數會按照值的方式傳遞給方法， 在方法內可以更改參數的值，但是呼叫完方法後，更改的參數值不會保存下來， 為了處理這種開發需求，可以在方法帶入參數時使用這些關鍵字來改變此行為。</description></item></channel></rss>