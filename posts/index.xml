<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>文章 on Mars's Blog</title><link>https://mars23003.github.io/blog/posts/</link><description>Recent content in 文章 on Mars's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Wed, 10 May 2023 07:18:40 +0800</lastBuildDate><atom:link href="https://mars23003.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>[Linux] 更改手動安裝的套件相關設定 以OpenSSH為例</title><link>https://mars23003.github.io/blog/posts/linux/linuxsettingopenssh/</link><pubDate>Wed, 10 May 2023 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/linux/linuxsettingopenssh/</guid><description>讓使用者可以了解到人工安裝套件時需注意的部分，並做相對應的修改</description></item><item><title>[Hugo] 了解Hugo的預設專案結構，做好靜態網站開發準備</title><link>https://mars23003.github.io/blog/posts/hugo/hugoprojectstructure/</link><pubDate>Tue, 02 May 2023 01:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/hugo/hugoprojectstructure/</guid><description>Hugo 是一個快速、靜態網站生成器，它使用 Go 語言開發，支持 Markdown 語法、模板自定義和快速編譯等功能。Hugo 的主要特點是速度快、佔用資源少，可以在幾秒鐘內生成大型的靜態網站，非常適合用於個人部落格，此篇將介紹其專案結構。</description></item><item><title>[Hugo] 使用Hugo創建網站超簡單!跟著做立刻上手!</title><link>https://mars23003.github.io/blog/posts/hugo/hugosetting/</link><pubDate>Mon, 01 May 2023 01:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/hugo/hugosetting/</guid><description>Hugo 是一個快速、靜態網站生成器，它使用 Go 語言開發，支持 Markdown 語法、模板自定義和快速編譯等功能。Hugo 的主要特點是速度快、佔用資源少，可以在幾秒鐘內生成大型的靜態網站，非常適合用於個人部落格。</description></item><item><title>[Design Pattern] 掌握設計模式：Adapter Pattern原理與應用</title><link>https://mars23003.github.io/blog/posts/designpattern/adapterpattern/</link><pubDate>Sun, 30 Apr 2023 08:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/designpattern/adapterpattern/</guid><description>Adapter Pattern 是一種軟體設計模式，用於將一個類的介面轉換成客戶端所期望的另一種介面。本文將介紹 Adapter Pattern 的模式名稱、問題、解決方案、結果等要素，並提供 C# 的範例。</description></item><item><title>[Google] 使用Google Search Console來提高你的網站搜尋排名</title><link>https://mars23003.github.io/blog/posts/google/googlesearchconsole/googlesearchconsole/</link><pubDate>Sun, 30 Apr 2023 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/google/googlesearchconsole/googlesearchconsole/</guid><description>Google Search Console是一個免費的工具，可以幫助你監測和管理你的網站在Google搜尋引擎中的表現。這篇文章將教你如何使用Google Search Console來提高你的網站的搜尋排名。</description></item><item><title>[Linux] 常用指令整理</title><link>https://mars23003.github.io/blog/posts/linux/linuxcommand/</link><pubDate>Sun, 30 Apr 2023 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/linux/linuxcommand/</guid><description>這篇文章是大家接觸Linux時會常用的指令整理，從文件操作到網路管理，介紹如何在終端機中使用這些指令</description></item><item><title>[JavaScript] 如何使用JavaScript與blob下載檔案？</title><link>https://mars23003.github.io/blog/posts/frontend/js/js-blob-download/</link><pubDate>Thu, 27 Apr 2023 08:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/frontend/js/js-blob-download/</guid><description>如果您在開發網頁應用時需要實現PDF下載功能，那麼本文將向您介紹如何使用JavaScript和fetch API來下載PDF檔案。</description></item><item><title>[Design Pattern] 掌握設計模式：Prototype Pattern原理與應用</title><link>https://mars23003.github.io/blog/posts/designpattern/prototypepattern/</link><pubDate>Fri, 21 Apr 2023 01:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/designpattern/prototypepattern/</guid><description>Prototype Pattern（原型模式）是一種創建型設計模式，其主要目的是透過複製已經存在的物件來建立新的物件，以避免重複的建立和初始化。這個模式可以幫助我們更有效地建立和管理物件。</description></item><item><title>ChatGPT使用教學：如何讓ChatGPT成為你的好夥伴</title><link>https://mars23003.github.io/blog/posts/chatgpt/chatgpt/</link><pubDate>Wed, 19 Apr 2023 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/chatgpt/chatgpt/</guid><description>ChatGPT是一個基於GPT-3.5架構的大型語言模型，由OpenAI開發。它可以通過自然語言理解和生成，與用戶進行智能對話。本教學將詳細介紹如何使用ChatGPT，使其成為你的好夥伴。</description></item><item><title>[Design Pattern] 掌握設計模式：Builder Pattern原理與應用</title><link>https://mars23003.github.io/blog/posts/designpattern/builderpattern/</link><pubDate>Tue, 18 Apr 2023 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/designpattern/builderpattern/</guid><description>了解Builder Pattern的應用，以及如何使用範例程式碼實現這種軟體設計模式。掌握如何使用Builder Pattern創建複雜的物件。</description></item><item><title>[Design Pattern] 掌握設計模式：Abstract Factory Pattern原理與應用</title><link>https://mars23003.github.io/blog/posts/designpattern/abstractfactorypattern/</link><pubDate>Mon, 17 Apr 2023 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/designpattern/abstractfactorypattern/</guid><description>了解 Abstract Factory 設計模式的概念、問題、解決方案和實現方法，以及使用該模式的優點和適用場景。</description></item><item><title>[Design Pattern] 透視工廠模式：簡單工廠、工廠方法、抽象工廠的差異分析</title><link>https://mars23003.github.io/blog/posts/designpattern/factorycomparison/</link><pubDate>Mon, 17 Apr 2023 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/designpattern/factorycomparison/</guid><description>本文介紹了三種常見的工廠模式：工廠方法模式、簡單工廠模式和抽象工廠模式，並進行了比較。比較項目包括：定義方式、產品種類、產品創建、產品擴充、彈性程度、複雜度和適用場景等。讀者可以從本文中了解到每種工廠模式的優缺點和適用場景，以及如何根據需求選擇最適合的工廠模式。</description></item><item><title>[C#] Lazy&lt;T> 類別：如何實現延遲初始化</title><link>https://mars23003.github.io/blog/posts/csharp/lazy/</link><pubDate>Thu, 13 Apr 2023 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/csharp/lazy/</guid><description>在 C# 中，Lazy&amp;lt;T&amp;gt; 是一個用於延遲初始化的類別。本文將介紹 Lazy&amp;lt;T&amp;gt; 的用法、好處以及實作方法，幫助您更好地理解這個重要的 C# 類別。</description></item><item><title>[Design Pattern] 掌握設計模式：Factory Method Pattern原理與應用</title><link>https://mars23003.github.io/blog/posts/designpattern/factorymethodpattern/</link><pubDate>Thu, 13 Apr 2023 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/designpattern/factorymethodpattern/</guid><description>Factory Method Pattern是一種常用的設計模式，它通過定義一個創建對象的接口，將對象的創建過程封裝在一個工廠方法中。這種模式可以提高程式碼的靈活性和可擴展性，並且易於進行單元測試和可重用性。本文將介紹Factory Method Pattern的基本概念、實現方式以及應用場景。</description></item><item><title>物件導向設計：SOLID原則的設計思想</title><link>https://mars23003.github.io/blog/posts/designpattern/solid/</link><pubDate>Tue, 11 Apr 2023 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/designpattern/solid/</guid><description>SOLID原則是物件導向程式設計中最基本的原則，透過遵循這些原則，可以使程式碼易於擴展、易於維護，同時也可以提高程式碼的可讀性和可靠性。本文將深入探討SOLID原則的內容和重要性。</description></item><item><title>[Design Pattern] 掌握設計模式：Singleton Pattern原理與應用</title><link>https://mars23003.github.io/blog/posts/designpattern/singletonpattern/</link><pubDate>Mon, 10 Apr 2023 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/designpattern/singletonpattern/</guid><description>Singleton Pattern 是一種常用的設計模式，旨在確保一個類只有一個實例存在...</description></item><item><title>[C#] 基本數據類型：整數、浮點數、字符、布林、字串和物件</title><link>https://mars23003.github.io/blog/posts/csharp/types/</link><pubDate>Fri, 24 Mar 2023 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/csharp/types/</guid><description>本文介紹了 C# 中的六種基本數據類型：整數、浮點數、字符、布林、字串和物件。了解這些數據類型有助於寫出高效、正確的 C# 程式。</description></item><item><title>[C#] 掌握 EF Core 的載入策略：Eager Loading、Lazy Loading和 Explicit Loading</title><link>https://mars23003.github.io/blog/posts/csharp/efcore/eager-lazy-explicitloading/</link><pubDate>Wed, 22 Mar 2023 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/csharp/efcore/eager-lazy-explicitloading/</guid><description>本文深入探討了EF Core中的Eager Loading、Lazy Loading和Explicit Loading等不同的載入策略。我們探討了這些載入策略的優缺點，以及如何使用它們來優化您的資料庫查詢。此外，我們還提供了實用的範例來演示每種載入策略如何在EF Core中實現。</description></item><item><title>[JavaScript] 讓你馬上了解bind、apply、call的用法</title><link>https://mars23003.github.io/blog/posts/frontend/js/bind-apply-call/</link><pubDate>Thu, 15 Sep 2022 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/frontend/js/bind-apply-call/</guid><description>在開發的時候如果需要指定this的物件時要怎麼辦呢?可以試試看bind、apply、call來解決你的問題......</description></item><item><title>[JavaScript] this是什麼?</title><link>https://mars23003.github.io/blog/posts/frontend/js/this/</link><pubDate>Wed, 14 Sep 2022 08:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/frontend/js/this/</guid><description>看過很多文章都有介紹this，總感覺好像怪怪的沒辦法很直覺的了解this這東西，本篇文章將會簡單介紹......</description></item><item><title>[JavaScript] 立即執行函式(IIFE)是什麼?</title><link>https://mars23003.github.io/blog/posts/frontend/js/iife/</link><pubDate>Wed, 14 Sep 2022 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/frontend/js/iife/</guid><description>IIFE (Immediately Invoked Function Expression) 是一個定義完就立即執行的 JavaScript function。 又稱為 Self-Executing Anonymous Function</description></item><item><title>[JavaScript] 不能不知道的 var、let、const 變數宣告</title><link>https://mars23003.github.io/blog/posts/frontend/js/var-let-const/</link><pubDate>Tue, 13 Sep 2022 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/frontend/js/var-let-const/</guid><description>不能不知道的 var、let、const 變數宣告方式，透過舉例來讓讀者輕鬆了解......</description></item><item><title>[CSS]簡單範例了解CSS引用的優先順序</title><link>https://mars23003.github.io/blog/posts/frontend/css/using-css/</link><pubDate>Wed, 07 Sep 2022 16:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/frontend/css/using-css/</guid><description>當瀏覽器讀取到CSS的樣式表時會透過樣式表內容來調整HTML的呈現，透過簡單範例了解CSS引用的優先順序。</description></item><item><title>[C#]3分鐘帶你了解淺層複製(Shallow Cpoy)與深層複製(Deep Copy)</title><link>https://mars23003.github.io/blog/posts/csharp/shallowcopy-and-deepcpoy/</link><pubDate>Wed, 07 Sep 2022 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/csharp/shallowcopy-and-deepcpoy/</guid><description>當我們有物件需要複製的情境時會探討到淺層複製與深層複製的問題， 淺層複製會遇到什麼樣的問題嗎?亦或是如何使用深層複製? 該篇文章將會做一個簡單整理。 。</description></item><item><title>[HTML]HTML基本介紹</title><link>https://mars23003.github.io/blog/posts/frontend/html/what-is-html/</link><pubDate>Wed, 07 Sep 2022 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/frontend/html/what-is-html/</guid><description>HTML是什麼?其中文全名為「超文字標示語言」......</description></item><item><title>[C#] 3分鐘帶你了解ValueType與ReferenceType</title><link>https://mars23003.github.io/blog/posts/csharp/valuetype-and-referencetype/</link><pubDate>Tue, 06 Sep 2022 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/csharp/valuetype-and-referencetype/</guid><description>使用實值型別時，每個變數都有自己的資料複本，因此對某一個變數進行的作業，不會影響另一個變數。 使用參考類型時，這兩種變數可以參考相同的物件，因此對其中一個變數進行的作業可能會影響另一個變數所參考的物件。</description></item><item><title>[C#] 方法參數in、ref、out、params關鍵字看這篇就夠了</title><link>https://mars23003.github.io/blog/posts/csharp/methodparameters/</link><pubDate>Fri, 02 Sep 2022 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/csharp/methodparameters/</guid><description>當一個方法不包含in、ref或out時， 其參數會按照值的方式傳遞給方法， 在方法內可以更改參數的值，但是呼叫完方法後，更改的參數值不會保存下來， 為了處理這種開發需求，可以在方法帶入參數時使用這些關鍵字來改變此行為。</description></item><item><title>[C#] 3分鐘帶你了解如何利用 NUnit 進行單元測試</title><link>https://mars23003.github.io/blog/posts/csharp/nunit/</link><pubDate>Mon, 29 Aug 2022 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/csharp/nunit/</guid><description>如何利用 NUnit 進行單元測試</description></item><item><title>[Hugo] 官方稱之為世界最快的架站框架?「Hugo」</title><link>https://mars23003.github.io/blog/posts/hugo/hugo/</link><pubDate>Mon, 29 Aug 2022 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/hugo/hugo/</guid><description>為何近期那麼多人使用這個框架來架站，這個框架以輕量化和速度為優勢，讓我們繼續往下看。</description></item><item><title>[Java] 輕鬆理解字串記憶體分配</title><link>https://mars23003.github.io/blog/posts/java/nunit/</link><pubDate>Mon, 29 Aug 2022 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/java/nunit/</guid><description>簡單舉例來了解字串記憶體分配</description></item><item><title>[Git] GitFlow是什麼?</title><link>https://mars23003.github.io/blog/posts/git/gitflow/</link><pubDate>Sun, 28 Aug 2022 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/git/gitflow/</guid><description>何謂GIT Flow? 當多人開發同一個專案的時候，若沒有制定好共同的規矩，將導致專案版控上的問題。 因此有人提出一套流程讓大家遵循。</description></item><item><title>[Git] 三分鐘了解Git基本指令</title><link>https://mars23003.github.io/blog/posts/git/gitcmd/</link><pubDate>Sun, 28 Aug 2022 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/git/gitcmd/</guid><description>三分鐘了解Git基本指令</description></item><item><title>[hardware]如何透過指令對SD卡進行格式化?</title><link>https://mars23003.github.io/blog/posts/hardware/format-sdcard/</link><pubDate>Sun, 28 Aug 2022 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/hardware/format-sdcard/</guid><description>格式化</description></item><item><title>[Leetcode][C#] 2114. Maximum Number of Words Found in Sentences</title><link>https://mars23003.github.io/blog/posts/leetcode/leetcode2114/</link><pubDate>Thu, 25 Aug 2022 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/leetcode/leetcode2114/</guid><description>A sentence is a list of words that are separated by a single space with no leading or trailing spaces. You are given an array of strings sentences, where each sentences[i] represents a single sentence. Return the maximum number of words that appear in a single sentence.</description></item><item><title>[ SQL Server ] NOLOCK、(NOLOCK)、WITH(NOLOCK) 差異?</title><link>https://mars23003.github.io/blog/posts/database/sqlserver-nolock/</link><pubDate>Thu, 18 Aug 2022 07:18:40 +0800</pubDate><guid>https://mars23003.github.io/blog/posts/database/sqlserver-nolock/</guid><description>with(nolock)</description></item></channel></rss>